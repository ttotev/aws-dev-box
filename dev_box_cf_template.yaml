Description: "AWS CloudFormation Sample Template ec2_instance_with_instance_profile: Create an EC2 instance with an associated instance profile. **WARNING** This template creates one or more Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template."
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
    InstanceType:
        Description: Dev Box EC2 instance type
        Type: String
        Default: t3a.small
        AllowedValues: ["t3a.small", "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
        ConstraintDescription: must be a valid EC2 instance type
    KeyPairName:
        Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
        Type: AWS::EC2::KeyPair::KeyName
        Default: dev-box
        ConstraintDescription: must be the name of an existing EC2 KeyPair
    SSHLocation: 
        Description: The IP address range that can be used to SSH to the EC2 instances
        Type: String
        MinLength: 9
        MaxLength: 18
        Default: "0.0.0.0/0"
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x"
    VpcId:
        Description: VPC for Dev Box placement
        Type: AWS::EC2::VPC::Id
        Default: vpc-id
        ConstraintDescription: must be an existing subnet id
    SubnetId:
        Description: Private Subnet ID to place the Dev Box in
        Type: AWS::EC2::Subnet::Id
        Default: subnet-id
        ConstraintDescription: must be an existing subnet id
    
            
Mappings:
    RegionMap:
        us-east-1:
            "AMI": "ami-07ebfd5b3428b6f4d"
        us-east-2:
            "AMI": "ami-0fc20dd1da406780b"
        us-west-1:
            "AMI": "ami-03ba3948f6c37a4b0"
        us-west-2:
            "AMI": "ami-0d1cd67c26f5fca19"

Resources:
    DevBox:
        Type: AWS::EC2::Instance
        Properties:
            InstanceType: !Ref InstanceType
            ImageId:
                Fn::FindInMap:
                -   RegionMap
                -   !Ref "AWS::Region"
                -   AMI
            IamInstanceProfile: !Ref RootInstanceProfile
            KeyName: !Ref KeyPairName
            SecurityGroupIds: 
            -   !Ref InstanceSecurityGroup
            SubnetId: !Ref SubnetId
            Tags: 
            -   Key: Name
                Value: Dev-Box
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    apt update -y
                    apt install -y unzip
                    cd /tmp
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    unzip awscliv2.zip
                    sudo ./aws/install
                    apt install -y software-properties-common
                    add-apt-repository -y ppa:deadsnakes/ppa
                    apt install -y python3.8
                    apt install -y python-setuptools
                    apt install -y python3-pip
                    pip3 install --upgrade pip
                    apt install -y docker.io
                    systemctl start docker
                    systemctl enable docker
                    curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                    chmod +x /usr/local/bin/docker-compose
                    curl -L https://raw.githubusercontent.com/docker/compose/1.25.4/contrib/completion/bash/docker-compose -o /etc/bash_completion.d/docker-compose
                    cd /home/ubuntu
                    mkdir -p /opt/aws/bin
                    python /usr/lib/python2.7/dist-packages/easy_install.py --script-dir /opt/aws/bin https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
                    /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource DevBox --configsets setup --region ${AWS::Region}
                    /opt/aws/bin/cfn-signal -e --stack ${AWS::StackName} --resource DevBox --configsets setup --region ${AWS::Region}
        Metadata:
            # If you change the configSet ID from setup, ensure you update it throughout the this resource configuration. Anywhere is says setup, change it to reflect the new ID. 
            AWS::CloudFormation::Init:
                configSets:
                    setup:
                    -   configure_cfn
                configure_cfn:
                    files:
                        /etc/cfn/cfn-hup.conf:
                            content: !Sub |
                                [main]
                                stack=${AWS::StackId}
                                region=${AWS::Region}
                                verbose=true
                                interval=5
                                mode: "000400"
                                owner: root
                                group: root
                        /etc/cfn/hooks.d/cfn-auto-reloader.conf:
                            content: !Sub |
                                [cfn-auto-reloader-hook]
                                triggers=post.update
                                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource DevBox --configsets setup --region ${AWS::Region}
                                mode: "000400"
                                owner: root
                                group: root
                        /lib/systemd/system/cfn-hup.service:
                            content: !Sub |
                                [Unit]
                                Description=cfn-hup daemon
                                
                                [Service]
                                Type=simple
                                ExecStart=/opt/aws/bin/cfn-hup
                                Restart=always
                                
                                [Install]
                                WantedBy=multi-user.target
                                mode: "000400"
                                owner: root
                                group: root
                    commands:
                        01_enable_cfn-hup:
                            command: "systemctl enable cfn-hup.service"
                        02_start_cfn-hup:
                            command: "systemctl start cfn-hup.service"

    InstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: "SSH access for Dev Box"
            SecurityGroupIngress: 
            -   IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref SSHLocation
            VpcId: !Ref VpcId
          
    RootRole: 
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                -   Effect: Allow
                    Action: ["sts:AssumeRole"]
                    Principal:
                        Service: ["ec2.amazonaws.com"]
            Path: "/"
    
    RolePolicies:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyName: root
            PolicyDocument:
                Statement: 
                -   Effect: Allow
                    Action: "*"
                    Resource: "*"
            Roles:
            - !Ref RootRole

    RootInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Path: "/"
            Roles: 
            - !Ref RootRole

Outputs:
    InstanceId:
        Description: InstanceId of the newly created EC2 instance
        Value: !Ref DevBox
    InstanceIP:
        Description: Private IP address of the newly created EC2 instance
        Value: !GetAtt DevBox.PrivateIp